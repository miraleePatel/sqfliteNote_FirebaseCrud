import 'dart:io';

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:demo/Custom_Widgets/custom_container.dart';
import 'package:demo/Custom_Widgets/custom_text.dart';
import 'package:demo/Model_class/user_model.dart';
import 'package:demo/getx_controller.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:get_storage/get_storage.dart';
import 'package:image_picker/image_picker.dart';
import 'package:sizer/sizer.dart';

class MyAccountPage extends StatefulWidget {
  const MyAccountPage({Key? key}) : super(key: key);

  @override
  State<MyAccountPage> createState() => _MyAccountPageState();
}

class _MyAccountPageState extends State<MyAccountPage> {
  final controller = Get.put(HomeController());
  final nameController = TextEditingController();
  final mobileController = TextEditingController();
  final imagePicker = ImagePicker();
  User? user = FirebaseAuth.instance.currentUser;
  UserModel userModel = UserModel();
  final storage = GetStorage();

  @override
  void initState() {
    // TODO: implement initState

    FirebaseFirestore.instance
        .collection("user")
        .doc(user!.uid)
        .get()
        .then((value) {
      this.userModel = UserModel.fromJson(value.data(), value.id);
      setState(() {});
    });
    select();
    super.initState();
  }

  select() async {
    var collection = FirebaseFirestore.instance.collection('user');
    var docSnapshot = await collection.doc(user!.uid).get();
    if (docSnapshot.exists) {
      Map<String, dynamic>? data = docSnapshot.data();
      nameController.text = data?['username'];
      mobileController.text = data?['phone'];
    }
    setState(() {});
  }

  upload() async {
    if (imagePath != null) {
      Reference data = FirebaseStorage.instance
          .ref()
          .child("Image/${imagename.path.toString()}");
      data.putFile(imagePath!).then((p0) async {
        url = await data.getDownloadURL();
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
          elevation: 0.0,
          foregroundColor: Colors.black,
          backgroundColor: Colors.white,
          title: CustomText(
            size: 2.8.h,
            text: "My Account",
            color: Colors.black,
          )),
      body: Padding(
        padding: EdgeInsets.only(right: 2.5.w, top: 2.h, left: 2.5.w),
        child: SingleChildScrollView(
          child: Column(
            children: [
              Center(
                child: Stack(
                  children: [
                    Container(
                        // color: Colors.red,
                        height: 19.h,
                        width: 15.h,
                        child: CircleAvatar(
                            radius: 10.h,
                            backgroundColor: Color(0xFF4a75e8).withOpacity(0.4),
                            child: imagePath != null
                                ? ClipRRect(
                                    borderRadius: BorderRadius.circular(10.h),
                                    child: Image.file(
                                      imagePath!,
                                      width: 15.h,
                                      height: 15.h,
                                      fit: BoxFit.cover,
                                    ),
                                  )
                                : user!.photoURL != null
                                    ? ClipRRect(
                                        borderRadius:
                                            BorderRadius.circular(10.h),
                                        child: Image.network(
                                          user!.photoURL!,
                                          width: 15.h,
                                          height: 15.h,
                                          fit: BoxFit.fitHeight,
                                        ),
                                      )
                                    : userModel.image != null
                                        ? ClipRRect(
                                            borderRadius:
                                                BorderRadius.circular(10.h),
                                            child: Image.network(
                                              userModel.image!,
                                              width: 15.h,
                                              height: 15.h,
                                              fit: BoxFit.cover,
                                            ),
                                          )
                                        : userModel.image == null
                                            ? ClipRRect(
                                                borderRadius:
                                                    BorderRadius.circular(10.h),
                                                child: Image.asset(
                                                  "assets/p1.png",
                                                  width: 15.h,
                                                  height: 15.h,
                                                  fit: BoxFit.cover,
                                                ),
                                              )
                                            : null)),
                    Positioned(
                      top: 14.5.h,
                      left: 5.6.h,
                      child: CustomContainer(
                        color: Color(0xFF4a75e8),
                        height: 4.h,
                        width: 4.h,
                        radius: 5,
                        child: GestureDetector(
                            onTap: () {
                              Get.bottomSheet(BottomSheet(
                                  shape: RoundedRectangleBorder(
                                      borderRadius: BorderRadius.circular(2.h)),
                                  onClosing: () {},
                                  builder: (context) {
                                    return SizedBox(
                                      height: 15.h,
                                      child: Column(
                                        mainAxisAlignment:
                                            MainAxisAlignment.center,
                                        children: [
                                          Container(
                                            height: 10.h,
                                            width: 20.h,
                                            child: Row(
                                              mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceBetween,
                                              children: [
                                                Column(
                                                  children: [
                                                    IconButton(
                                                        onPressed: () async {
                                                          final XFile? camera =
                                                              await imagePicker
                                                                  .pickImage(
                                                                      source: ImageSource
                                                                          .camera);

                                                          setState(() {
                                                            imagePath = File(
                                                                camera!.path);
                                                            imagename = File(
                                                                camera.name);
                                                            upload();
                                                          });

                                                          Get.back();
                                                        },
                                                        icon: Icon(
                                                          Icons.camera,
                                                          size: 3.h,
                                                          color:
                                                              Color(0xFF4a75e8),
                                                        )),
                                                    CustomText(
                                                      text: "Camera",
                                                      size: 2.h,
                                                    )
                                                  ],
                                                ),
                                                Column(
                                                  children: [
                                                    IconButton(
                                                        onPressed: () async {
                                                          final XFile? gallery =
                                                              await imagePicker
                                                                  .pickImage(
                                                                      source: ImageSource
                                                                          .gallery);
                                                          setState(() {
                                                            imagePath = File(
                                                                gallery!.path);
                                                            imagename = File(
                                                                gallery.name);
                                                            upload();

                                                          });
                                                          Get.back();
                                                        },
                                                        icon: Icon(
                                                            Icons.panorama,
                                                            size: 3.h,
                                                            color: Color(
                                                                0xFF4a75e8))),
                                                    CustomText(
                                                      text: "Gallery",
                                                      size: 2.h,
                                                    )
                                                  ],
                                                )
                                              ],
                                            ),
                                          )
                                        ],
                                      ),
                                    );
                                  }));
                            },
                            child: Icon(Icons.add,
                                color: Colors.white, size: 2.h)),
                      ),
                    )
                  ],
                ),
              ),
              SizedBox(height: 3.h),
              CustomText(
                text: userModel.username == null
                    ? user!.displayName
                    : nameController.text,
                size: 2.5.h,
              ),
              SizedBox(height: 3.h),
              Container(
                padding: EdgeInsets.only(left: 6.w, right: 6.w),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    CustomText(
                        text: "Name", size: 1.8.h, color: Colors.grey.shade600),
                    SizedBox(height: 1.h),
                    CustomTextField(
                        controller: nameController,
                        hintText: "username",
                        prefix: Icon(
                          Icons.person_sharp,
                          size: 2.7.h,
                          color: Color(0xFF4a75e8),
                        )),
                    SizedBox(height: 2.h),
                    CustomText(
                        text: "Email",
                        size: 1.8.h,
                        color: Colors.grey.shade600),
                    SizedBox(height: 1.h),
                    CustomContainer(
                      height: 6.7.h,
                      width: double.infinity,
                      radius: 1.5.h,
                      color: Color(0xFF4a75e8).withOpacity(0.2),
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Container(
                            padding: EdgeInsets.only(left: 1.8.h),
                            child: Row(
                              children: [
                                Icon(
                                  Icons.email,
                                  size: 2.5.h,
                                  color: Color(0xFF4a75e8),
                                ),
                                SizedBox(
                                  width: 1.5.h,
                                ),
                                CustomText(
                                    text: user!.email,
                                    fontWeight: FontWeight.normal,
                                    size: 1.7.h),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ),
                    SizedBox(height: 2.h),
                    CustomText(
                        text: "Phone Number",
                        size: 1.8.h,
                        color: Colors.grey.shade600),
                    SizedBox(height: 1.h),
                    CustomTextField(
                        maxLength: 10,
                        controller: mobileController,
                        hintText: "Enter Mobile Number",
                        prefix: Icon(
                          Icons.call,
                          size: 2.7.h,
                          color: Color(0xFF4a75e8),
                        )),
                    SizedBox(height: 2.h),
                  ],
                ),
              ),
              SizedBox(height: 7.h),
              Center(
                child: GestureDetector(
                  onTap: () {
                    controller.updateProfile({
                      'username': nameController.text,
                      'phone': mobileController.text,
                      'image': url,
                    }, user!.uid);

                    setState(() {});
                  },
                  child: CustomContainer(
                      height: 6.h,
                      width: 25.h,
                      radius: 1.5.h,
                      color: Color(0xFF4a75e8),
                      child: Center(
                        child: CustomText(
                          text: "Save",
                          color: Colors.white,
                          size: 2.2.h,
                        ),
                      )),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  TextFormField CustomTextField(
      {TextEditingController? controller,
      bool obscureText = false,
      Widget? suffix,
      String? hintText,
      initialValue,
      Widget? prefix,
      int? maxLength,
      String? Function(String?)? validator,
      void Function(String?)? onSaved}) {
    return TextFormField(
      maxLength: maxLength,
      initialValue: initialValue,
      onSaved: onSaved,
      style: TextStyle(
        color: Colors.black,
        fontSize: 2.h,
      ),
      controller: controller,
      cursorColor: Colors.black,
      // obscureText: obscureText,
      decoration: InputDecoration(
          errorStyle: const TextStyle(color: Color(0xFF4a75e8)),
          errorBorder: OutlineInputBorder(
              borderSide: BorderSide(color: Color(0xFF4a75e8)),
              borderRadius: BorderRadius.all(Radius.circular(1.5.h))),
          enabledBorder: OutlineInputBorder(
            borderSide: BorderSide(color: Colors.white),
            borderRadius: BorderRadius.all(Radius.circular(1.5.h)),
          ),
          focusedBorder: OutlineInputBorder(
              borderSide: BorderSide(color: Color(0xFF4a75e8)),
              borderRadius: BorderRadius.all(Radius.circular(1.5.h))),
          filled: true,
          fillColor: Color(0xFF4a75e8).withOpacity(0.2),
          hintText: hintText,
          hintStyle: TextStyle(color: Colors.black, fontSize: 1.7.h),
          suffixIcon: suffix,
          prefixIcon: prefix,
          border: InputBorder.none
          // border: OutlineInputBorder( borderSide: BorderSide(color: Color(0xFF4a75e8)),
          //     borderRadius: BorderRadius.all(Radius.circular(1.5.h))),
          ),
      validator: validator,
    );
  }
}

String url = "";
var imagePath;
// var imageShow;
var imagename;
